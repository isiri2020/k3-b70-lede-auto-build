name: 编译 OpenWrt-B70

on:
  push:
    branches: master
  schedule:
    - cron: 0 12 * * *
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出本项目
        uses: actions/checkout@master
        with:
          ref: master
          
      - name: 校验本地文件
        uses: actions/checkout@v1

      - name: 安装编译环境
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get -qq update
          sudo -E apt-get -qq install wget build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h

      - name: 下载源码
        env: 
          REPO_URL: https://github.com/Lienol/openwrt
          REPO_BRANCH: dev-19.07
        run: |
          git clone --depth 1 $REPO_URL ./openwrt
          cp -rf ./openwrt/* .
          rm -rf ./openwrt/

      - name: 自定义扩展文件
        run: |
          mkdir -p ./package/diy
          cd ./package/diy
          # luci-theme-argon
          git clone -b 19.07_stable https://github.com/jerrykuku/luci-theme-argon luci-theme-argon
          # UnblockNeteaseMusicGo (包含后端和前端)
          git clone https://github.com/cnsilvan/luci-app-unblockneteasemusic       unblock-neteasemusic-go
          ## $(STAGING_DIR_HOST)/bin/upx --lzma --best $(GO_PKG_BUILD_BIN_DIR)/UnblockNeteaseMusic
          sed -i '/.*upx /d' unblock-neteasemusic-go/UnblockNeteaseMusic/Makefile
          
          # smartdns
          git clone https://github.com/getwin/openwrt-smartdns                      smartdns
          ## git clone https://github.com/pymumu/luci-app-smartdns                  luci-app-smartdns
          git clone -b dev-19.07 https://github.com/tty228/luci-app-smartdns        luci-app-smartdns
          # fix for compiling
          sed -i 's/\.\.\/\.\.\/luci\.mk/\$(TOPDIR)\/feeds\/luci\/luci\.mk/g'       luci-app-smartdns/Makefile
          
          # KMS
          git clone https://github.com/flytosky-f/openwrt-vlmcsd             vlmcsd
          # git clone https://github.com/flytosky-f/luci-app-vlmcsd          luci-app-vlmcsd
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-vlmcsd      luci-app-vlmcsd
          
          # pdnsd-alt
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/pdnsd-alt            pdnsd-alt
          # flowoffload (依赖 pdnsd-alt)
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/shortcut-fe          shortcut-fe
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-sfe         luci-app-sfe
          svn checkout https://github.com/coolsnowwolf/lede/trunk/package/lean/luci-app-flowoffload luci-app-flowoffload
          
          
      - name: 更新 feeds
        run: |
          ./scripts/feeds clean

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 生成配置文件.config
        run: |
          cp ./config.d/b70.config ./.config
          make defconfig

      - name: make 下载
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译固件
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: 准备 artifact
        run: |
          find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}
          find ./bin/targets/ -type f -name "*.*" | grep -v hiwifi  | xargs rm -rf {}



      - name: 上传 artifact
        uses: actions/upload-artifact@master
        with:
          name: Lede firmware
          path: ./bin/targets/
