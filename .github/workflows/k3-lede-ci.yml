#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: k3-lede-ci

on:
  push:
    branches: master
  schedule:
    - cron: 0 20 * * *

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: 检出本项目
        uses: actions/checkout@master
        with:
          ref: master

      - name: 清理空间
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          df -h

      - name: 克隆lede源码
        env: 
          REPO_URL: https://github.com/coolsnowwolf/lede
          REPO_BRANCH: master
        run: |
          git clone --depth 1 $REPO_URL -b $REPO_BRANCH ./lede
          cp -rf ./lede/* .
          rm -rf ./lede/

      - name: 克隆自定义源码
        run: |
          cd package
          mkdir lazeyliu
          cd lazeyliu
          git clone https://github.com/tty228/luci-app-serverchan.git
          git clone https://github.com/pymumu/smartdns.git
          
      - name: 更新 feeds
        run: |
          ./scripts/feeds clean

          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 生成配置文件.config
        run: |
          cp ./config.d/k3.config ./.config
          make defconfig

      - name: make 下载
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: 编译固件
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: 准备 artifact
        run: |
          cd ./bin/targets/
          find .  -type d -name "packages" | xargs rm -rf {}
          find .  ! -name "." | grep -v k3 | xargs rm -rf {}
          du -h


      - name: 上传 artifact
        uses: actions/upload-artifact@master
        with:
          name: Lede firmware
          path: ./bin/targets/
